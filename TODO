	Little stuff...
DONE	    Get rid of the MAKE_b_xxx_FRAME_ macros.
DONE	    Clean up and comment second half of proc.h.
DONE	    Change mem_init_op to allow NULL.
	    Add procedure prototypes of some sort.
	    Add macros to ref numbered args.
		(e.g. #define ARG1 (pair_car(F_SUBJ)))
DONE	    It should be illegal to bind two C functions to the same symbol.
DONE	    Fix the makefile so subdirectories are rebuilt.
DONE	    mem_fixvec should export non-virtual element accessors.
	    Rename bind.{h,c} to env.{h,c}.

	nonrecursive eval
 DONE	    Define C procedure API.
 DONE	    threaded model?
 DONE	    documentation
 DONE	    Clean up proc.h somehow?
	    Implement full set of arg lists, see r6rs 11.4.2.
	    Implement REBIND_PROC.
	    Debug call/cc.

DONE	full mem model
 DONE	    define obj ops.
 DONE	    rewrite base objects.
 DONE	    rewrite frames to use objects.
 DONE	    write mixvec.
 DONE	    rewrite binding as mixvec.
  no	    rewrite procedure as mixvec?
 DONE	    change mixvec's int type to intptr_t
 DONE	    rewrite frame as mixvec.
 DONE	    must remove value from frame - not thread safe.
 DONE	    drop mem_init_op and mem_free_op.

	GC
 DONE	    stop and copy algorithm
 DONE	    Clean up.
 DONE	    Create run-time parameter to run debug code.
	    alternate algorithms!

	decentralize unit testing.

	libraries
	    ???

	macros
 DONE	    Implement scheme primitives for cheezy-read, eval, and print.
 DONE	    Reimplement the main loop in Scheme.
	    Have lambda rewrite proc body as described in r6rs 11.3.
		All it needs to do is verify that no definitions
		follow expressions.
		(How does lambda push another proc onto the stack?)
	    See r6rs-lib 12.3.

	full reader

	make readline better.
